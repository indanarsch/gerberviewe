// Generated by CoffeeScript 1.9.3
(function() {
  var Point, find, remove;

  find = require('lodash.find');

  remove = require('lodash.remove');

  Point = (function() {
    function Point(x, y) {
      this.x = x;
      this.y = y;
      this.edges = [];
    }

    Point.prototype.addEdgeTo = function(point, radius, largeArc, sweep) {
      this.addToEdges(point, radius, largeArc, sweep);
      return point.addToEdges(this, radius, largeArc, (sweep === 1 ? 0 : 1));
    };

    Point.prototype.addToEdges = function(point, r, lg, s) {
      var edgeObj;
      edgeObj = {
        point: point
      };
      if (r != null) {
        edgeObj.radius = r;
        edgeObj.largeArc = lg;
        edgeObj.sweep = s;
      }
      if (!find(this.edges, edgeObj)) {
        return this.edges.push(edgeObj);
      }
    };

    Point.prototype.drawToAdjacent = function() {
      var a, edge, path, start;
      start = this;
      edge = start.edges.pop();
      a = edge.point;
      if (edge.radius != null) {
        path = ['A', edge.radius, edge.radius, 0, edge.largeArc, edge.sweep, a.x, a.y];
      } else {
        path = ['L', a.x, a.y];
      }
      edge.point = start;
      if (edge.sweep != null) {
        edge.sweep = (edge.sweep === 1 ? 0 : 1);
      }
      remove(a.edges, edge);
      return {
        point: a,
        path: path
      };
    };

    return Point;

  })();

  module.exports = Point;

}).call(this);
